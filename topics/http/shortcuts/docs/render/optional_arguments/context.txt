====================
==== Django Docs ===
====================

context

A dictionary of values to add to the template context. By default, this is an empty dictionary. 
If a value in the dictionary is callable, the view will call it just before 
rendering the template.

====================
===== Chat GPT =====
====================

In Django, when you use the `render()` shortcut function to render a template, 
you typically pass a dictionary of context variables as the third argument. 
These context variables are then made available to the template for rendering.

Here's an example:

```python
from django.shortcuts import render

def my_view(request):
    context = {
        'variable1': 'value1',
        'variable2': 'value2',
    }
    return render(request, 'my_template.html', context)
```

In this example, the `context` dictionary contains two key-value pairs: `'variable1': 'value1'` 
and `'variable2': 'value2'`. These variables will be accessible in the `my_template.html` 
template.

Within the template, you can access these variables using Django's template language syntax. 
For example:

```html
<!DOCTYPE html>
<html>
<head>
    <title>My Template</title>
</head>
<body>
    <p>Variable 1: {{ variable1 }}</p>
    <p>Variable 2: {{ variable2 }}</p>
</body>
</html>
```

When the `my_template.html` template is rendered, the placeholders 
`{{ variable1 }}` and `{{ variable2 }}` will be replaced with the corresponding values from 
the context dictionary.

So, to summarize, the `context` attribute in the `render()` function is simply a dictionary 
containing the variables you want to pass to the template for rendering.